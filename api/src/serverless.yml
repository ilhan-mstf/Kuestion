service: kuestion-graphql-api

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  memorySize: 128
  timeout: 30

  environment:
    REGION: ${self:custom.dynamodb.region}
    DYNAMODB_ENDPOINT: ${self:custom.dynamodb.url}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - Fn::GetAtt: [ UserTable, Arn ]
        - Fn::GetAtt: [ SessionTable, Arn ]
        - Fn::GetAtt: [ QuestionTable, Arn ]
        - Fn::GetAtt: [ VoteTable, Arn ]
    - Effect: "Allow"
      Action:
        - "logs:*"
        - "cloudwatch:*"
        - "xray:*"
      Resource:
        - "*"

package:
  exclude:
    - __test__/**
    - data/**
    - local.js
    - .serverless

layers:
  commonLibs:
    path: ../layer
    compatibleRuntimes:
      - nodejs12.x

functions:
  graphql:
    handler: handler.server
    layers:
    - {Ref: CommonLibsLambdaLayer}
    events:
    - http:
        path: /api
        method: post
        cors: true

custom:
  dynamodb:
    url: 'http://localhost:8000'
    region: 'local'
  serverless-offline:
    httpPort: 4000

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: User
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    SessionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Session
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
        - IndexName: emailIndex
          KeySchema:
          - AttributeName: email
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    QuestionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Question
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: sessionId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
        - IndexName: SessionIdIndex
          KeySchema:
          - AttributeName: sessionId
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    VoteTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Vote
        AttributeDefinitions:
          - AttributeName: questionIdEmail
            AttributeType: S
          - AttributeName: sessionIdEmail
            AttributeType: S
        KeySchema:
          - AttributeName: questionIdEmail
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
        - IndexName: SessionIdEmailIndex
          KeySchema:
          - AttributeName: sessionIdEmail
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1